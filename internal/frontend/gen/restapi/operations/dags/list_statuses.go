// Code generated by go-swagger; DO NOT EDIT.

package dags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListStatusesHandlerFunc turns a function with the right signature into a list statuses handler
type ListStatusesHandlerFunc func(ListStatusesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListStatusesHandlerFunc) Handle(params ListStatusesParams) middleware.Responder {
	return fn(params)
}

// ListStatusesHandler interface for that can handle valid list statuses params
type ListStatusesHandler interface {
	Handle(ListStatusesParams) middleware.Responder
}

// NewListStatuses creates a new http.Handler for the list statuses operation
func NewListStatuses(ctx *middleware.Context, handler ListStatusesHandler) *ListStatuses {
	return &ListStatuses{Context: ctx, Handler: handler}
}

/*
	ListStatuses swagger:route GET /history dags listStatuses

Returns a list of statuses.
*/
type ListStatuses struct {
	Context *middleware.Context
	Handler ListStatusesHandler
}

func (o *ListStatuses) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewListStatusesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
